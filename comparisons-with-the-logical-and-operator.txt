function testLogicalAnd(val) {
  // Only change code below this line

  if (val > 24 && val < 51 ) {
     
      return "Yes";
    
  }

  // Only change code above this line
  return "No";
}

testLogicalAnd(10);


//

The same effect could be achieved by nesting an if statement inside another if:

if (num > 5) {
  if (num < 10) {
    return "Yes";
  }
}
return "No";

will only return Yes if num is greater than 5 and less than 10. The same logic can be written as:

if (num > 5 && num < 10) {
  return "Yes";
}
return "No";

Replace the two if statements with one statement, using the && operator, which will return the string Yes if val is less than or equal to 50 and greater than or equal to 25. Otherwise, will return the string No.
Tests

Passed: You should use the && operator once
Passed: You should only have one if statement
Passed: testLogicalAnd(0) should return the string No
Passed: testLogicalAnd(24) should return the string No
Passed: testLogicalAnd(25) should return the string Yes
Passed: testLogicalAnd(30) should return the string Yes
Passed: testLogicalAnd(50) should return the string Yes
Passed: testLogicalAnd(51) should return the string No
Passed: testLogicalAnd(75) should return the string No
Passed: testLogicalAnd(80) should return the string No



//
